name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('backend/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Tidy and download dependencies
        run: |
          go mod tidy
          go mod download

      - name: Verify dependencies
        run: go mod verify

      - name: Run go vet
        run: go vet ./...

      - name: Check formatting
        run: |
          gofmt -l . > fmt_output.txt
          if [ -s fmt_output.txt ]; then
            echo "The following files are not properly formatted:"
            cat fmt_output.txt
            exit 1
          fi

      - name: Build
        run: go build ./...

      - name: Run unit tests
        run: go test ./... -v -short

  frontend:
    runs-on: ubuntu-latest
    needs: backend
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run tests (if available)
        run: |
          if npm run | grep -q "test"; then
            npm test
          else
            echo "No test script found, skipping tests"
          fi
        continue-on-error: true

      - name: Build frontend
        run: npm run build

  docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check documentation exists
        run: |
          if [ ! -f "docs/documentation.md" ]; then
            echo "Error: docs/documentation.md not found"
            exit 1
          fi
          echo "âœ… Documentation file exists"

      - name: Validate documentation structure
        run: |
          if [ -f "docs/design.md" ]; then
            echo "âœ… Design documentation found"
          fi
          echo "ðŸ“š Documentation validation complete"