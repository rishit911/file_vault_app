name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: 1.21
  NODE_VERSION: 20

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Setup and verify Go environment
        run: |
          go env
          go version
          go mod tidy
          go mod download

      - name: Run go vet and format checks
        run: |
          go vet ./...
          fmt_out=$(gofmt -l .)
          if [ -n "$fmt_out" ]; then
            echo "gofmt issues:"
            echo "$fmt_out"
            exit 1
          fi

      - name: Build
        run: go build ./...

      - name: Run tests
        run: go test ./... -v

      - name: Save Go modules cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

  frontend:
    needs: backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Run tests (if available)
        run: |
          if npm run | grep -q "test"; then
            npm test
          else
            echo "No test script found, skipping tests"
          fi
        continue-on-error: true

  docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check documentation exists
        run: |
          if [ ! -f "docs/documentation.md" ]; then
            echo "Error: docs/documentation.md not found"
            exit 1
          fi
          echo "âœ… Documentation file exists"